#!/usr/bin/env bash

[[ -n "${DEBUG:-}" ]] && set -x

set -Eeuo pipefail

VERSION="0.0.1a"

SOURCE=${BASH_SOURCE[0]}
while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
THIS_DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )

usage(){
    echo "USAGE: $0 [-<h|-help>] [--post <POST>] [-<p|-persona> <NAME[+NAME]...>] [-<m|-model> <MODEL>] [--python] [--markdown] -- <prompt>"
}

post(){
    bash "${THIS_DIR}/post/${POST:-default}"
}

while [[ $# -gt 0 ]];do
    case $1 in
        "--help"|"-h")
            usage
            exit 1
            ;;
        "--")
            shift
            break
            ;;
        "--markdown")
            shift
            POST=markdown
            export PERSONA=markdown
            ;;
        "--post")
            shift
            POST="$1"
            shift
            ;;
        "--persona"|"-p")
            shift
            export PERSONA="$1"
            shift
            ;;
        "--python")
            shift
            POST=python
            export PERSONA=python+concise+runnable
            ;;
        "--model"|"-m")
            shift
            export MODEL="$1"
            shift
            ;;
        "--temperature"|"-t")
            shift
            export TEMPERATURE=$1
            shift
            ;;
        *)
            echo "Unknown arg: $1"
            exit 1
            ;;
    esac
done

read_stdin(){
    echo "reading from stdin..." >&2
    local _buf=""
    while IFS='' read _line; do
        echo "$_line"
    done
}

./endpoints.sh "${@:-$(read_stdin)}" | post
